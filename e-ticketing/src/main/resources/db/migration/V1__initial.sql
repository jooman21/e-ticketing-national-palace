BEGIN;
-- ENUMS
CREATE
EXTENSION IF NOT EXISTS "uuid-ossp";
CREATE TYPE residency AS ENUM ('LOCAL', 'INTERNATIONAL');
CREATE TYPE currency AS ENUM ('ETB', 'USD', 'EURO'); -- extend if needed
CREATE TYPE ticket_status AS ENUM ('PENDING', 'VALID', 'IN-VALID', 'EXPIRED'); -- example statuses
CREATE TYPE announcement_type as ENUM (' PARTIAL_AVAILABILITY' , 'TOTAL_CLOSURE', 'INFORMATIONAL_NOTICE');
CREATE TYPE ticket_category as ENUM (' INDIVIDUAL' , 'GROUP');





-- event_proposals definition

-- Drop table

-- DROP TABLE event_proposals;

CREATE TABLE event_proposals (
	id int8 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE) NOT NULL,
	admin_comment text NULL,
	agency_name varchar(255) NULL,
	agenda varchar(255) NULL,
	attendees_count int4 NULL,
	company_name varchar(255) NULL,
	created_at timestamp(6) NULL,
	event_type varchar(255) NULL,
	is_private bool NULL,
	is_ticketed bool NULL,
	proposed_date timestamp(6) NULL,
	proposer_id int8 NULL,
	status varchar(255) NULL,
	updated_at timestamp(6) NULL,
	CONSTRAINT event_proposals_pkey PRIMARY KEY (id),
	CONSTRAINT event_proposals_status_check CHECK (((status)::text = ANY ((ARRAY['PENDING'::character varying, 'ACCEPTED'::character varying, 'REJECTED'::character varying])::text[])))
);


-- events definition

-- Drop table

-- DROP TABLE events;

CREATE TABLE events (
	id int8 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE) NOT NULL,
	attendees int4 NULL,
	description text NULL,
	end_time timestamp(6) NULL,
	"location" varchar(255) NULL,
	start_time timestamp(6) NULL,
	title varchar(255) NULL,
	CONSTRAINT events_pkey PRIMARY KEY (id)
);


-- inventories definition

-- Drop table

-- DROP TABLE inventories;

CREATE TABLE inventories (
	id uuid NOT NULL,
	available int4 NULL,
	event_id int8 NULL,
	reserved int4 NULL,
	total int4 NULL,
	CONSTRAINT inventories_pkey PRIMARY KEY (id)
);


-- notifications definition

-- Drop table

-- DROP TABLE notifications;

CREATE TABLE notifications (
	id int8 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE) NOT NULL,
	created_at timestamp(6) NULL,
	message text NULL,
	notification_status varchar(255) NULL,
	notification_type varchar(255) NULL,
	recipient varchar(255) NULL,
	reference_id int8 NULL,
	scheduled_time timestamp(6) NULL,
	sent_time timestamp(6) NULL,
	subject varchar(255) NULL,
	triggered_by varchar(255) NULL,
	CONSTRAINT notifications_notification_status_check CHECK (((notification_status)::text = ANY ((ARRAY['PENDING'::character varying, 'SENT'::character varying, 'FAILED'::character varying])::text[]))),
	CONSTRAINT notifications_notification_type_check CHECK (((notification_type)::text = ANY ((ARRAY['EMAIL'::character varying, 'SMS'::character varying])::text[]))),
	CONSTRAINT notifications_pkey PRIMARY KEY (id)
);


-- rules_and_regulations definition

-- Drop table

-- DROP TABLE rules_and_regulations;

CREATE TABLE rules_and_regulations (
	id uuid NOT NULL,
	category varchar(100) NULL,
	created_at timestamp(6) NULL,
	created_by varchar(100) NOT NULL,
	description text NULL,
	is_active bool NOT NULL,
	updated_at timestamp(6) NULL,
	CONSTRAINT rules_and_regulations_pkey PRIMARY KEY (id)
);


-- ticket_policy definition

-- Drop table

-- DROP TABLE ticket_policy;

CREATE TABLE ticket_policy (
	id uuid NOT NULL,
	created_at timestamp(6) NULL,
	updated_at timestamp(6) NULL,
	validity_days int4 NULL,
	CONSTRAINT ticket_policy_pkey PRIMARY KEY (id)
);


-- timeslots definition

-- Drop table

-- DROP TABLE timeslots;

CREATE TABLE timeslots (
	id uuid NOT NULL,
	created_at timestamp(6) NULL,
	end_time time(6) NULL,
	is_active bool NULL,
	max_tickets int4 NOT NULL,
	start_time time(6) NULL,
	updated_at timestamp(6) NULL,
	CONSTRAINT timeslots_pkey PRIMARY KEY (id)
);


-- visit_places definition

-- Drop table

-- DROP TABLE visit_places;

CREATE TABLE visit_places (
	id uuid NOT NULL,
	created_at timestamp(6) NULL,
	is_available bool NULL,
	"name" varchar(255) NULL,
	updated_at timestamp(6) NULL,
	CONSTRAINT visit_places_pkey PRIMARY KEY (id)
);


-- visitors definition

-- Drop table

-- DROP TABLE visitors;

CREATE TABLE visitors (
	id uuid NOT NULL,
	created_at timestamp(6) NULL,
	email varchar(255) NULL,
	full_name varchar(255) NULL,
	nationality varchar(255) NULL,
	phone_number varchar(255) NULL,
	"residency" varchar(255) NULL,
	updated_at timestamp(6) NULL,
	CONSTRAINT visitors_pkey PRIMARY KEY (id),
	CONSTRAINT visitors_residency_check CHECK (((residency)::text = ANY ((ARRAY['LOCAL'::character varying, 'INTERNATIONAL'::character varying])::text[])))
);


-- visits_schedules definition

-- Drop table

-- DROP TABLE visits_schedules;

CREATE TABLE visits_schedules (
	id uuid NOT NULL,
	created_at timestamp(6) NULL,
	"date" date NOT NULL,
	is_open bool NULL,
	reason_for_closing varchar(255) NULL,
	updated_at timestamp(6) NULL,
	CONSTRAINT visits_schedules_pkey PRIMARY KEY (id)
);


-- announcement definition

-- Drop table

-- DROP TABLE announcement;

CREATE TABLE announcement (
	id uuid NOT NULL,
	"announcement_type" varchar(255) NULL,
	created_at timestamp(6) NULL,
	effective_date timestamp(6) NULL,
	message varchar(255) NULL,
	subject varchar(255) NULL,
	updated_at timestamp(6) NULL,
	visit_schedule_id uuid NULL,
	CONSTRAINT announcement_announcement_type_check CHECK (((announcement_type)::text = ANY ((ARRAY['TOTAL_CLOSURE'::character varying, 'PARTIAL_AVAILABILITY'::character varying, 'INFORMATIONAL_NOTICE'::character varying])::text[]))),
	CONSTRAINT announcement_pkey PRIMARY KEY (id),
	CONSTRAINT fklxoa8xka6xi3u7wlg6gle1vfs FOREIGN KEY (visit_schedule_id) REFERENCES visits_schedules(id)
);


-- announcement_places definition

-- Drop table

-- DROP TABLE announcement_places;

CREATE TABLE announcement_places (
	announcement_id uuid NOT NULL,
	visit_place_id uuid NOT NULL,
	CONSTRAINT fkc9pt0sdw8xpgbd21sexwmr1tp FOREIGN KEY (visit_place_id) REFERENCES visit_places(id),
	CONSTRAINT fkg37uotdap3r023q3nb7k8y9jr FOREIGN KEY (announcement_id) REFERENCES announcement(id)
);


-- queue_entries definition

-- Drop table

-- DROP TABLE queue_entries;

CREATE TABLE queue_entries (
	id uuid NOT NULL,
	created_at timestamp(6) NULL,
	queue_position int4 NULL,
	updated_at timestamp(6) NULL,
	time_slot_id uuid NULL,
	visit_schedule_id uuid NULL,
	CONSTRAINT queue_entries_pkey PRIMARY KEY (id),
	CONSTRAINT fkkeilcyjjycvdcuafle43320pr FOREIGN KEY (time_slot_id) REFERENCES timeslots(id),
	CONSTRAINT fkqsetr1v7ixcrx2upx8vygci1t FOREIGN KEY (visit_schedule_id) REFERENCES visits_schedules(id)
);


-- ticket_types definition

-- Drop table

-- DROP TABLE ticket_types;

CREATE TABLE ticket_types (
	id uuid NOT NULL,
	available bool NULL,
	created_at timestamp(6) NULL,
	description varchar(255) NULL,
	is_recommended bool NULL,
	"name" varchar(255) NULL,
	"ticket_category" varchar(255) NULL,
	updated_at timestamp(6) NULL,
	ticket_policy_id uuid NOT NULL,
	CONSTRAINT ticket_types_pkey PRIMARY KEY (id),
	CONSTRAINT ticket_types_ticket_category_check CHECK (((ticket_category)::text = ANY ((ARRAY['INDIVIDUAL'::character varying, 'GROUP'::character varying])::text[]))),
	CONSTRAINT fkspcnn7p75nao3gaanf4b6tp4f FOREIGN KEY (ticket_policy_id) REFERENCES ticket_policy(id)
);


-- tickets definition

-- Drop table

-- DROP TABLE tickets;

CREATE TABLE tickets (
	id uuid NOT NULL,
	expires_at timestamp(6) NULL,
	issued_at timestamp(6) NULL,
	qr_code varchar(255) NULL,
	"ticket_status" varchar(255) NULL,
	visit_date date NOT NULL,
	ticket_type_id uuid NULL,
	time_slot_id uuid NULL,
	visitor_id uuid NULL,
	CONSTRAINT tickets_pkey PRIMARY KEY (id),
	CONSTRAINT tickets_ticket_status_check CHECK (((ticket_status)::text = ANY ((ARRAY['PENDING'::character varying, 'VALID'::character varying, 'IN_VALID'::character varying, 'EXPIRED'::character varying])::text[]))),
	CONSTRAINT fk7mda2fmjm0ud2m81ro691q0bp FOREIGN KEY (time_slot_id) REFERENCES timeslots(id),
	CONSTRAINT fkotik7mbbb14hu8n9og7o92k5h FOREIGN KEY (ticket_type_id) REFERENCES ticket_types(id),
	CONSTRAINT fkqp520qwxh1un9d43e46qxr99m FOREIGN KEY (visitor_id) REFERENCES visitors(id)
);


-- visit_schedule_place_status definition

-- Drop table

-- DROP TABLE visit_schedule_place_status;

CREATE TABLE visit_schedule_place_status (
	id uuid NOT NULL,
	created_at timestamp(6) NULL,
	is_open bool NULL,
	reason_for_closing varchar(255) NULL,
	updated_at timestamp(6) NULL,
	visit_place_id uuid NOT NULL,
	visit_schedule_id uuid NOT NULL,
	CONSTRAINT visit_schedule_place_status_pkey PRIMARY KEY (id),
	CONSTRAINT fkb11ffc4lhq2rdgqktswsmida2 FOREIGN KEY (visit_schedule_id) REFERENCES visits_schedules(id),
	CONSTRAINT fkj14q3rvcxhebk0attc1xdg6ep FOREIGN KEY (visit_place_id) REFERENCES visit_places(id)
);


-- price_configs definition

-- Drop table

-- DROP TABLE price_configs;

CREATE TABLE price_configs (
	id uuid NOT NULL,
	active bool NULL,
	created_at timestamp(6) NULL,
	"currency" varchar(255) NULL,
	price float8 NULL,
	"residency" varchar(255) NULL,
	updated_at timestamp(6) NULL,
	visitor_type varchar(255) NULL,
	ticket_type_id uuid NULL,
	CONSTRAINT price_configs_currency_check CHECK (((currency)::text = ANY ((ARRAY['USD'::character varying, 'EURO'::character varying, 'ETB'::character varying])::text[]))),
	CONSTRAINT price_configs_pkey PRIMARY KEY (id),
	CONSTRAINT price_configs_residency_check CHECK (((residency)::text = ANY ((ARRAY['LOCAL'::character varying, 'INTERNATIONAL'::character varying])::text[]))),
	CONSTRAINT fk4qslv5b87xp6n97llrniycc79 FOREIGN KEY (ticket_type_id) REFERENCES ticket_types(id)
);


-- ticket_type_visit_place definition

-- Drop table

-- DROP TABLE ticket_type_visit_place;

CREATE TABLE ticket_type_visit_place (
	ticket_type_id uuid NOT NULL,
	visit_place_id uuid NOT NULL,
	CONSTRAINT fkoy3gpyrvdtcnrkb4wysp71d1e FOREIGN KEY (ticket_type_id) REFERENCES ticket_types(id),
	CONSTRAINT fkq9echl9vtyfh7nacwmefykm7s FOREIGN KEY (visit_place_id) REFERENCES visit_places(id)
);






COMMIT;