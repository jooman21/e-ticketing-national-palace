<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.e_ticketing.sys.system.mapper.SysNoticeMapper">

    <resultMap type="com.example.e_ticketing.sys.system.domain.SysNotice" id="SysNoticeResult">
        <result property="noticeId"       column="notice_id"       />
        <result property="noticeTitle"    column="notice_title"    />
        <result property="noticeType"     column="notice_type"     />
        <result property="noticeContent"  column="notice_content"  />
        <result property="status"         column="status"          />
        <result property="createBy"       column="create_by"       />
        <result property="createTime"     column="create_time"     />
        <result property="updateBy"       column="update_by"       />
        <result property="updateTime"     column="update_time"     />
        <result property="remark"         column="remark"          />

        <collection property="targets"
                    ofType="com.example.e_ticketing.sys.system.domain.SysNoticeTarget"
                    select="selectNoticeTargets"
                    column="notice_id" />
    </resultMap>

    <sql id="selectNoticeVo">
        select notice_id, notice_title, notice_type, cast(notice_content as text) as notice_content, status, create_by, create_time, update_by, update_time, remark
        from sys_notice
    </sql>

    <select id="selectNoticeById" parameterType="Long" resultMap="SysNoticeResult">
        <include refid="selectNoticeVo"/>
        where notice_id = #{noticeId}
    </select>

    <select id="selectNoticeTargets" parameterType="Long"
            resultType="com.example.e_ticketing.sys.system.domain.SysNoticeTarget">
        SELECT
            target_id AS targetId,
            notice_id AS noticeId,
            target_user_id AS targetUserId,
            target_dept_id AS targetDeptId,
            target_role_id AS targetRoleId,
            create_by AS createBy,
            create_time AS createTime
        FROM sys_notice_target
        WHERE notice_id = #{noticeId}
    </select>



    <resultMap type="com.example.e_ticketing.sys.system.domain.SysNotice" id="NoticeWithSeenResult">
        <result property="noticeId" column="notice_id"/>
        <result property="noticeTitle" column="notice_title"/>
        <result property="noticeType" column="notice_type"/>
        <result property="noticeContent" column="notice_content"/>
        <result property="status" column="status"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="remark" column="remark"/>
        <result property="seen" column="seen"/>

        <collection property="targets"
                    ofType="com.example.e_ticketing.sys.system.domain.SysNoticeTarget"
                    select="selectNoticeTargets"
                    column="notice_id" />
    </resultMap>


    <select id="selectNoticesForUser" parameterType="Long"
            resultMap="NoticeWithSeenResult">
        SELECT
            n.notice_id,
            n.notice_title,
            n.notice_type,
            CAST(n.notice_content AS TEXT) AS notice_content,
            n.status,
            n.create_by,
            n.create_time,
            n.update_by,
            n.update_time,
            n.remark,
            COALESCE(s.seen, FALSE) AS seen
        FROM sys_notice n
                 JOIN sys_notice_target t ON n.notice_id = t.notice_id
                 LEFT JOIN sys_user u ON u.user_id = #{userId}
                 LEFT JOIN sys_user_role ur ON ur.user_id = u.user_id
                 LEFT JOIN sys_notice_seen s
                           ON s.notice_id = n.notice_id AND s.user_id = #{userId}
        WHERE
            t.target_user_id = #{userId}
           OR t.target_dept_id = u.dept_id
           OR t.target_role_id = ur.role_id
        ORDER BY n.create_time DESC
    </select>


    <select id="selectNoticeList" parameterType="com.example.e_ticketing.sys.system.domain.SysNotice" resultMap="SysNoticeResult">
        <include refid="selectNoticeVo"/>
        <where>
            <if test="noticeTitle != null and noticeTitle != ''">
                AND notice_title like concat('%', #{noticeTitle}, '%')
            </if>
            <if test="noticeType != null and noticeType != ''">
                AND notice_type = #{noticeType}
            </if>
            <if test="createBy != null and createBy != ''">
                AND create_by like concat('%', #{createBy}, '%')
            </if>
        </where>
    </select>

    <insert id="insertNotice"
            parameterType="com.example.e_ticketing.sys.system.domain.SysNotice"
            useGeneratedKeys="true"
            keyProperty="noticeId">
        insert into sys_notice (
        <if test="noticeTitle != null and noticeTitle != '' ">notice_title, </if>
        <if test="noticeType != null and noticeType != '' ">notice_type, </if>
        <if test="noticeContent != null and noticeContent != '' ">notice_content, </if>
        <if test="status != null and status != '' ">status, </if>
        <if test="remark != null and remark != ''">remark,</if>
        <if test="createBy != null and createBy != ''">create_by,</if>
        create_time
        ) values (
        <if test="noticeTitle != null and noticeTitle != ''">#{noticeTitle}, </if>
        <if test="noticeType != null and noticeType != ''">#{noticeType}, </if>
        <if test="noticeContent != null and noticeContent != ''">#{noticeContent}, </if>
        <if test="status != null and status != ''">#{status}, </if>
        <if test="remark != null and remark != ''">#{remark},</if>
        <if test="createBy != null and createBy != ''">#{createBy},</if>
        current_timestamp
        )
    </insert>
    <insert id="insertNoticeTargets" parameterType="java.util.List">
        <if test="list != null and list.size() > 0">
            INSERT INTO sys_notice_target (
            notice_id, target_user_id, target_dept_id, target_role_id
            )
            VALUES
            <foreach collection="list" item="item" separator=",">
                (
                #{item.noticeId},
                #{item.targetUserId},
                #{item.targetDeptId},
                #{item.targetRoleId}
                )
            </foreach>
        </if>
    </insert>


    <update id="updateNotice" parameterType="com.example.e_ticketing.sys.system.domain.SysNotice">
        update sys_notice
        <set>
            <if test="noticeTitle != null and noticeTitle != ''">notice_title = #{noticeTitle}, </if>
            <if test="noticeType != null and noticeType != ''">notice_type = #{noticeType}, </if>
            <if test="noticeContent != null">notice_content = #{noticeContent}, </if>
            <if test="status != null and status != ''">status = #{status}, </if>
            <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
            update_time = current_timestamp
        </set>
        where notice_id = #{noticeId}
    </update>

    <delete id="deleteNoticeById" parameterType="Long">
        delete from sys_notice where notice_id = #{noticeId}
    </delete>

    <delete id="deleteNoticeByIds" parameterType="Long">
        delete from sys_notice where notice_id in
        <foreach item="noticeId" collection="array" open="(" separator="," close=")">
            #{noticeId}
        </foreach>
    </delete>

    <delete id="deleteNoticeTargetsByNoticeId" parameterType="long">
        DELETE FROM sys_notice_target WHERE notice_id = #{noticeId}
    </delete>

    <insert id="insertIfNotExists">
        INSERT INTO sys_notice_seen (notice_id, user_id)
        VALUES (#{noticeId}, #{userId})
        ON CONFLICT (notice_id, user_id) DO NOTHING
    </insert>

    <update id="markSeen">
        UPDATE sys_notice_seen
        SET seen = TRUE,
            seen_at = CURRENT_TIMESTAMP
        WHERE notice_id = #{noticeId}
          AND user_id = #{userId}
    </update>

    <select id="isSeen" resultType="boolean">
        SELECT seen FROM sys_notice_seen
        WHERE notice_id = #{noticeId} AND user_id = #{userId}
    </select>

</mapper>
